"""
Django settings for Soffybiz project.

Generated by 'django-admin startproject' using Django 3.1.4.

For more information on this file, see
https://docs.djangoproject.com/en/3.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.1/ref/settings/
"""
import os.path
import logging
from datetime import timedelta
from pathlib import Path
from soffybiz.emails import EMAILS
from soffybiz.installed_apps import APPS
from soffybiz.admins import ADMINS_MAILS
from soffybiz import debug
from soffybiz.custom_logger_db import CustomDBLogger
# Para ambiente local con algunas macs con chip intel
# import certifi, os

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '5s5OgsQOrCGNJi8npoACDFLx_xz8nD-ZRfLo0Jj99QarzqomI22Ht5_HNcQlsiTHGNw'

DEBUG = debug.DEBUG
ALLOWED_HOSTS = debug.HOSTS

# Application definition
SESSION_SERIALIZER = 'django.contrib.sessions.serializers.PickleSerializer'

INSTALLED_APPS = APPS

ADMINS = ADMINS_MAILS

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'soffybiz.middleware.url_access.ProfileAccessWindow',
    'core.functions.middleware_user_login',
    # 'soffybiz.middleware.log_sistema.QueryLoggingMiddleware',
    'soffybiz.middleware.get_user.UserEmailLoggingMiddleware',
    # 'soffybiz.middleware.autologout.AutoLogout',
    'csp.middleware.CSPMiddleware',
]

ROOT_URLCONF = 'soffybiz.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'soffybiz.wsgi.application'

EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.office365.com'
EMAIL_PORT = 587
EMAIL_HOST_USER = 'nova@grupobuena.com'
EMAIL_USERS = EMAILS
EMAIL_HOST_PASSWORD = '1T2024@#$'
EMAIL_USE_TLS = True
DEFAULT_FROM_EMAIL = 'nova@grupobuena.com'

import os
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': debug.NAME_DB,
        'USER': debug.USER_DB,
        'PASSWORD': debug.PASSWORD_DB,
        'HOST': 'localhost',
        'PORT': '3306',
    }
}

# Password validation
# https://docs.djangoproject.com/en/3.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]
PASSWORD_HASHERS = [
    'django.contrib.auth.hashers.PBKDF2PasswordHasher',
]

LANGUAGE_CODE = 'es-MX'

TIME_ZONE = 'America/Guatemala'

USE_I18N = True

USE_L10N = False

USE_TZ = False

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.1/howto/static-files/

STATIC_URL = '/static/'
AUTH_USER_MODEL = 'user_auth.User'
STATIC_ROOT = os.path.join(BASE_DIR, 'static')

STATICFILES_DIRS = [
    # os.path.join(BASE_DIR, 'nova/static'),
    # os.path.join(BASE_DIR, 'rrhh/static')
]

STATICFILES_STORAGE = 'django.contrib.staticfiles.storage.StaticFilesStorage'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')
MEDIA_URL = '/media/'
DATA_UPLOAD_MAX_NUMBER_FIELDS = 10240
SESSION_EXPIRE_AT_BROWSER_CLOSE = True
SESSION_COOKIE_AGE = debug.SESSION_TIME

FEL_AMBIENT = debug.FEL_AMBIENTE

FILE_UPLOAD_MAX_MEMORY_SIZE = 10485760

REST_FRAMEWORK = {
    'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.LimitOffsetPagination',
    'PAGE_SIZE': 5,
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'durin.auth.TokenAuthentication',
    ],
    'DEFAULT_RENDERER_CLASSES': (
        'rest_framework.renderers.JSONRenderer',
    ),
    'DEFAULT_THROTTLE_CLASSES': [
        'rest_framework.throttling.AnonRateThrottle'
    ],
    'DEFAULT_THROTTLE_RATES': {
        'anon': '50/day'
    },
}

# REST_DURIN = {
#     "DEFAULT_TOKEN_TTL": timedelta(days=365),
#     "TOKEN_CHARACTER_LENGTH": 64,
#     "USER_SERIALIZER": None,
#     "AUTH_HEADER_PREFIX": "Token",
#     "EXPIRY_DATETIME_FORMAT": api_settings.DATETIME_FORMAT,
#     "TOKEN_CACHE_TIMEOUT": 60,
#     "REFRESH_TOKEN_ON_LOGIN": True,
#     "AUTHTOKEN_SELECT_RELATED_LIST": ["user"],
#     "API_ACCESS_CLIENT_NAME": "nova_api_bridge",
#     "API_ACCESS_EXCLUDE_FROM_SESSIONS": False,
#     "API_ACCESS_RESPONSE_INCLUDE_TOKEN": False,
# }

CRONJOBS = [
    ('0 * * * *', 'api_bridge.cron.api_get_horas_foxcore'),
    ('0 * * * *', 'api_bridge.cron.api_send_notificaciones_ticket'),
    # ('0 6 * * 1', 'api_bridge.cron.api_send_reporte_existencias_condiciones'),
    ('0 * * * *', 'api_bridge.cron.api_send_email_manual_traslado_cron'),
    ('0 17 * * *', 'api_bridge.cron.api_send_refacturaciones'),
]

ADJUNTOS_COMISIONES_REQUERIDO = False
DEFAULT_AUTO_FIELD = 'django.db.models.AutoField'

SECURE_BROWSER_XSS_FILTER = True
# X-Frame-Options
X_FRAME_OPTIONS = 'DENY'
# X-Content-Type-Options
SECURE_CONTENT_TYPE_NOSNIFF = True
# Strict-Transport-Security
SECURE_HSTS_SECONDS = 15768000
SECURE_HSTS_INCLUDE_SUBDOMAINS = True
SECURE_HSTS_PRELOAD = True

# that requests over HTTP are redirected to HTTPS. also can config in webserver
SECURE_SSL_REDIRECT = not DEBUG

# for more security
CSRF_COOKIE_SECURE = True
CSRF_USE_SESSIONS = True
CSRF_COOKIE_HTTPONLY = True
SESSION_COOKIE_SECURE = not DEBUG
SESSION_COOKIE_SAMESITE = 'Lax'
SESSION_COOKIE_HTTPONLY = True
SECURE_CROSS_ORIGIN_OPENER_POLICY = 'same-origin' if not DEBUG else None

CSP_DEFAULT_SRC = ("'self'", "http://soffybiz.com", "https://*.cloudflare.com", "https://*.googleapis.com",
                   "https://fonts.gstatic.com", "https://*.powerbi.com", "https://*.bootstrapcdn.com",
                   "'unsafe-inline'", "'unsafe-eval'", "https://unpkg.com/", "cdn.jsdelivr.net")
CSP_STYLE_SRC = ("'self'", "http://soffybiz.com", "https://*.cloudflare.com", "https://*.googleapis.com",
                 "https://fonts.gstatic.com", "https://*.powerbi.com", "https://*.bootstrapcdn.com", "'unsafe-inline'",
                 "'unsafe-eval'", "http://localhost", "https://unpkg.com/", "cdn.jsdelivr.net")

# Para ambiente local con algunas macs con chip intel
# os.environ['SSL_CERT_FILE'] = certifi.where()